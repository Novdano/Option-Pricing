plot(1:length(stock_px), delta_atm, col="red", "l",ylab="Delta", xlab="Time")
lines(1:length(stock_px), deltas_bs, col="green", "l")
lines(1:length(stock_px), deltas_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), stock_held_mkt, col="red", "l",ylab="Stock Held", xlab="Time")
lines(1:length(stock_px), stock_held_BS, col="green", "l")
lines(1:length(stock_px), stock_held_SABR, col="blue", "l")
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
#Long one call, hedge with stock
BS_IV <- sd(hist_returns(hist_px)) * sqrt(252)
delta_bs <- deltaBS(stock_px[[1]], 100, 0.0175, BS_IV, 55/252)
delta_SABR <- deltaSABR(stock_px[[1]], 100, 0.0175, 55/252, alpha, beta, rho, nu)
delta_mkt <- delta_BS_atm[[1]]
#current value of portfolio
port_bs <- atm_px[[1]] - delta_bs * stock_px[[1]]
port_SABR <- atm_px[[1]] - delta_SABR * stock_px[[1]]
port_mkt <- atm_px[[1]] - delta_mkt * stock_px[[1]]
#daily profit and loss
daily_pnl_bs <- rep(0,length(stock_px))
daily_pnl_mkt <- rep(0,length(stock_px))
daily_pnl_SABR <- rep(0, length(stock_px))
daily_pnl_bs[[1]] <- -port_bs
daily_pnl_mkt[[1]] <- -port_mkt
daily_pnl_SABR[[1]] <- -port_SABR
deltas_bs <- rep(0,length(stock_px))
deltas_bs[[1]] <- delta_bs
deltas_SABR <- rep(0,length(stock_px))
deltas_SABR[[1]] <- delta_SABR
stock_held_BS <- rep(0,length(stock_px))
stock_held_SABR <- rep(0, length(stock_px))
stock_held_mkt <- rep(0, length(stock_px))
stock_held_BS[[1]] <- -delta_bs
stock_held_mkt[[1]] <- -delta_mkt
stock_held_SABR[[1]] <- -delta_SABR
days_left <- 55
for (i in 2:length(stock_px)){
days_skipped <- as.numeric(as.Date(stock[i,1], "%m/%d/%Y") - as.Date(stock[i-1,1], "%m/%d/%Y"))
days_left <- days_left - days_skipped
if (as.Date(stock[i,1], "%m/%d/%Y") > (as.Date("06/14/2018","%m/%d/%Y"))){
r <- 0.02
} else {
r <- 0.0175
}
new_vol <- c(hist_px[i:length(hist_px)], head(stock_px,i-1))
new_deltaBS <- deltaBS(stock_px[[i]], 100, r, BS_IV, days_left/252)
new_deltaSABR <- deltaSABR(stock_px[[i]], 100, r, days_left/252, alpha, beta, rho, nu)
new_deltaMkt <- delta_atm[[i]]
delta_bs <- new_deltaBS + stock_held_BS[[i-1]]
delta_SABR <- new_deltaSABR + stock_held_SABR[[i-1]]
delta_mkt <- new_deltaMkt + stock_held_mkt[[i-1]]
port_bs <- port_bs - delta_bs * stock_px[[i]]
port_SABR <- port_SABR - delta_SABR * stock_px[[i]]
port_mkt <- port_mkt - delta_mkt * stock_px[[i]]
daily_pnl_bs[[i]] <- -port_bs
daily_pnl_SABR[[i]] <- -port_SABR
daily_pnl_mkt[[i]] <- -port_mkt
deltas_bs[[i]] <- new_deltaBS
deltas_SABR[[i]] <- new_deltaSABR
stock_held_BS[[i]] <- -delta_bs + stock_held_BS[[i-1]]
stock_held_SABR[[i]] <- -delta_SABR + stock_held_SABR[[i-1]]
stock_held_mkt[[i]] <- -delta_mkt + stock_held_mkt[[i-1]]
}
print(deltas_SABR)
print(deltas_bs)
print(delta_atm)
plot(1:length(stock_px),daily_pnl_mkt,col="red", "l", ylab="PnL", xlab="Time")
lines(1:length(stock_px), daily_pnl_bs, col="green", "l")
lines(1:length(stock_px), daily_pnl_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), delta_atm, col="red", "l",ylab="Delta", xlab="Time")
lines(1:length(stock_px), deltas_bs, col="green", "l")
lines(1:length(stock_px), deltas_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), stock_held_mkt, col="red", "l",ylab="Stock Held", xlab="Time")
lines(1:length(stock_px), stock_held_BS, col="green", "l")
lines(1:length(stock_px), stock_held_SABR, col="blue", "l")
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
#Long one call, hedge with stock
BS_IV <- sd(hist_returns(hist_px)) * sqrt(252)
delta_bs <- deltaBS(stock_px[[1]], 100, 0.0175, BS_IV, 55/252)
delta_SABR <- deltaSABR(stock_px[[1]], 100, 0.0175, 55/252, alpha, beta, rho, nu)
delta_mkt <- delta_BS_atm[[1]]
#current value of portfolio
port_bs <- atm_px[[1]] - delta_bs * stock_px[[1]]
port_SABR <- atm_px[[1]] - delta_SABR * stock_px[[1]]
port_mkt <- atm_px[[1]] - delta_mkt * stock_px[[1]]
#daily profit and loss
daily_pnl_bs <- rep(0,length(stock_px))
daily_pnl_mkt <- rep(0,length(stock_px))
daily_pnl_SABR <- rep(0, length(stock_px))
daily_pnl_bs[[1]] <- -port_bs
daily_pnl_mkt[[1]] <- -port_mkt
daily_pnl_SABR[[1]] <- -port_SABR
deltas_bs <- rep(0,length(stock_px))
deltas_bs[[1]] <- delta_bs
deltas_SABR <- rep(0,length(stock_px))
deltas_SABR[[1]] <- delta_SABR
stock_held_BS <- rep(0,length(stock_px))
stock_held_SABR <- rep(0, length(stock_px))
stock_held_mkt <- rep(0, length(stock_px))
stock_held_BS[[1]] <- -delta_bs
stock_held_mkt[[1]] <- -delta_mkt
stock_held_SABR[[1]] <- -delta_SABR
days_left <- 55
for (i in 2:length(stock_px)){
days_skipped <- as.numeric(as.Date(stock[i,1], "%m/%d/%Y") - as.Date(stock[i-1,1], "%m/%d/%Y"))
days_left <- days_left - days_skipped
if (as.Date(stock[i,1], "%m/%d/%Y") > (as.Date("06/14/2018","%m/%d/%Y"))){
r <- 0.02
} else {
r <- 0.0175
}
new_vol <- c(hist_px[i:length(hist_px)], head(stock_px,i-1))
new_deltaBS <- deltaBS(stock_px[[i]], 100, r, BS_IV, days_left/252)
new_deltaSABR <- deltaSABR(stock_px[[i]], 100, r, days_left/252, alpha, beta, rho, nu)
new_deltaMkt <- delta_atm[[i]]
delta_bs <- new_deltaBS + stock_held_BS[[i-1]]
delta_SABR <- new_deltaSABR + stock_held_SABR[[i-1]]
delta_mkt <- new_deltaMkt + stock_held_mkt[[i-1]]
port_bs <- port_bs - delta_bs * stock_px[[i]]
port_SABR <- port_SABR - delta_SABR * stock_px[[i]]
port_mkt <- port_mkt - delta_mkt * stock_px[[i]]
daily_pnl_bs[[i]] <- -port_bs
daily_pnl_SABR[[i]] <- -port_SABR
daily_pnl_mkt[[i]] <- -port_mkt
deltas_bs[[i]] <- new_deltaBS
deltas_SABR[[i]] <- new_deltaSABR
stock_held_BS[[i]] <- -delta_bs + stock_held_BS[[i-1]]
stock_held_SABR[[i]] <- -delta_SABR + stock_held_SABR[[i-1]]
stock_held_mkt[[i]] <- -delta_mkt + stock_held_mkt[[i-1]]
}
print(deltas_SABR)
print(deltas_bs)
print(delta_atm)
plot(1:length(stock_px),daily_pnl_mkt,col="red", "l", ylab="PnL", xlab="Time", ylim=c(30,70))
lines(1:length(stock_px), daily_pnl_bs, col="green", "l")
lines(1:length(stock_px), daily_pnl_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), delta_atm, col="red", "l",ylab="Delta", xlab="Time")
lines(1:length(stock_px), deltas_bs, col="green", "l")
lines(1:length(stock_px), deltas_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), stock_held_mkt, col="red", "l",ylab="Stock Held", xlab="Time")
lines(1:length(stock_px), stock_held_BS, col="green", "l")
lines(1:length(stock_px), stock_held_SABR, col="blue", "l")
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
IV_SABR <- function(f, K, t, alpha, beta, rho, nu){
first = alpha/((f*K)^((1-beta)/2) *(1 + (((1-beta)^2)/24) *(log(f/K))^2 + ((1-beta^4)/1920)*log(f/K)^4))
z = (nu/alpha) * ((f*K)^((1-beta)/2)) * log(f/K)
chi_z = log((sqrt(1-2*rho*z+z^2) + z - rho)/(1-rho))
last = 1 + (((1-beta)^2/24) * alpha^2/((f*K)^(1-beta)) + (1/4) * ((rho*beta*nu*alpha)/((f*K)^((1-beta)/2))) + ((2-3*rho^2)/24)*nu^2)*t
return (first * (z/chi_z) * last)
}
SABR_V0 <- function(S, K, r, T, alpha, beta, rho, nu){
return (BS_V0(S, K, r, IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T))
}
deltaSABR <- function(S, K, r, T, alpha, beta, rho, nu){
delta <- 1e-3
return (deltaBS(S*exp(r*T), K, r,  IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T) + vegaBS(S*exp(r*T), K, r,  IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T) * ((IV_SABR(S*exp(r*T)+delta, K, T, alpha, beta, rho, nu) - IV_SABR(S*exp(r*T)-delta, K, T, alpha, beta, rho, nu)) / (2*delta)) * rho * nu/(S*exp(r*T)*beta))
}
alpha <- 0.1645685
beta <- 1
rho <- 0.8180933
nu <- 0.6794907
#Long one call, hedge with stock
BS_IV <- sd(hist_returns(hist_px)) * sqrt(252)
delta_bs <- deltaBS(stock_px[[1]], 100, 0.0175, BS_IV, 55/252)
delta_SABR <- deltaSABR(stock_px[[1]], 100, 0.0175, 55/252, alpha, beta, rho, nu)
delta_mkt <- delta_BS_atm[[1]]
#current value of portfolio
port_bs <- atm_px[[1]] - delta_bs * stock_px[[1]]
port_SABR <- atm_px[[1]] - delta_SABR * stock_px[[1]]
port_mkt <- atm_px[[1]] - delta_mkt * stock_px[[1]]
#daily profit and loss
daily_pnl_bs <- rep(0,length(stock_px))
daily_pnl_mkt <- rep(0,length(stock_px))
daily_pnl_SABR <- rep(0, length(stock_px))
daily_pnl_bs[[1]] <- -port_bs
daily_pnl_mkt[[1]] <- -port_mkt
daily_pnl_SABR[[1]] <- -port_SABR
deltas_bs <- rep(0,length(stock_px))
deltas_bs[[1]] <- delta_bs
deltas_SABR <- rep(0,length(stock_px))
deltas_SABR[[1]] <- delta_SABR
stock_held_BS <- rep(0,length(stock_px))
stock_held_SABR <- rep(0, length(stock_px))
stock_held_mkt <- rep(0, length(stock_px))
stock_held_BS[[1]] <- -delta_bs
stock_held_mkt[[1]] <- -delta_mkt
stock_held_SABR[[1]] <- -delta_SABR
days_left <- 55
for (i in 2:length(stock_px)){
days_skipped <- as.numeric(as.Date(stock[i,1], "%m/%d/%Y") - as.Date(stock[i-1,1], "%m/%d/%Y"))
days_left <- days_left - days_skipped
if (as.Date(stock[i,1], "%m/%d/%Y") > (as.Date("06/14/2018","%m/%d/%Y"))){
r <- 0.02
} else {
r <- 0.0175
}
new_vol <- c(hist_px[i:length(hist_px)], head(stock_px,i-1))
new_deltaBS <- deltaBS(stock_px[[i]], 100, r, BS_IV, days_left/252)
new_deltaSABR <- deltaSABR(stock_px[[i]], 100, r, days_left/252, alpha, beta, rho, nu)
new_deltaMkt <- delta_atm[[i]]
delta_bs <- new_deltaBS + stock_held_BS[[i-1]]
delta_SABR <- new_deltaSABR + stock_held_SABR[[i-1]]
delta_mkt <- new_deltaMkt + stock_held_mkt[[i-1]]
port_bs <- port_bs - delta_bs * stock_px[[i]]
port_SABR <- port_SABR - delta_SABR * stock_px[[i]]
port_mkt <- port_mkt - delta_mkt * stock_px[[i]]
daily_pnl_bs[[i]] <- -port_bs
daily_pnl_SABR[[i]] <- -port_SABR
daily_pnl_mkt[[i]] <- -port_mkt
deltas_bs[[i]] <- new_deltaBS
deltas_SABR[[i]] <- new_deltaSABR
stock_held_BS[[i]] <- -delta_bs + stock_held_BS[[i-1]]
stock_held_SABR[[i]] <- -delta_SABR + stock_held_SABR[[i-1]]
stock_held_mkt[[i]] <- -delta_mkt + stock_held_mkt[[i-1]]
}
print(deltas_SABR)
print(deltas_bs)
print(delta_atm)
plot(1:length(stock_px),daily_pnl_mkt,col="red", "l", ylab="PnL", xlab="Time", ylim=c(30,70))
lines(1:length(stock_px), daily_pnl_bs, col="green", "l")
lines(1:length(stock_px), daily_pnl_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), delta_atm, col="red", "l",ylab="Delta", xlab="Time")
lines(1:length(stock_px), deltas_bs, col="green", "l")
lines(1:length(stock_px), deltas_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), stock_held_mkt, col="red", "l",ylab="Stock Held", xlab="Time")
lines(1:length(stock_px), stock_held_BS, col="green", "l")
lines(1:length(stock_px), stock_held_SABR, col="blue", "l")
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
IV_SABR <- function(f, K, t, alpha, beta, rho, nu){
first = alpha/((f*K)^((1-beta)/2) *(1 + (((1-beta)^2)/24) *(log(f/K))^2 + ((1-beta^4)/1920)*log(f/K)^4))
z = (nu/alpha) * ((f*K)^((1-beta)/2)) * log(f/K)
chi_z = log((sqrt(1-2*rho*z+z^2) + z - rho)/(1-rho))
last = 1 + (((1-beta)^2/24) * alpha^2/((f*K)^(1-beta)) + (1/4) * ((rho*beta*nu*alpha)/((f*K)^((1-beta)/2))) + ((2-3*rho^2)/24)*nu^2)*t
return (first * (z/chi_z) * last)
}
SABR_V0 <- function(S, K, r, T, alpha, beta, rho, nu){
return (BS_V0(S, K, r, IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T))
}
deltaSABR <- function(S, K, r, T, alpha, beta, rho, nu){
delta <- 1e-3
return (deltaBS(S*exp(r*T), K, r,  IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T) + vegaBS(S*exp(r*T), K, r,  IV_SABR(S*exp(r*T), K, T, alpha, beta, rho, nu), T) * ((IV_SABR(S*exp(r*T)+delta, K, T, alpha, beta, rho, nu) - IV_SABR(S*exp(r*T)-delta, K, T, alpha, beta, rho, nu)) / (2*delta)))
}
alpha <- 0.1645685
beta <- 1
rho <- 0.8180933
nu <- 0.6794907
#Long one call, hedge with stock
BS_IV <- sd(hist_returns(hist_px)) * sqrt(252)
delta_bs <- deltaBS(stock_px[[1]], 100, 0.0175, BS_IV, 55/252)
delta_SABR <- deltaSABR(stock_px[[1]], 100, 0.0175, 55/252, alpha, beta, rho, nu)
delta_mkt <- delta_BS_atm[[1]]
#current value of portfolio
port_bs <- atm_px[[1]] - delta_bs * stock_px[[1]]
port_SABR <- atm_px[[1]] - delta_SABR * stock_px[[1]]
port_mkt <- atm_px[[1]] - delta_mkt * stock_px[[1]]
#daily profit and loss
daily_pnl_bs <- rep(0,length(stock_px))
daily_pnl_mkt <- rep(0,length(stock_px))
daily_pnl_SABR <- rep(0, length(stock_px))
daily_pnl_bs[[1]] <- -port_bs
daily_pnl_mkt[[1]] <- -port_mkt
daily_pnl_SABR[[1]] <- -port_SABR
deltas_bs <- rep(0,length(stock_px))
deltas_bs[[1]] <- delta_bs
deltas_SABR <- rep(0,length(stock_px))
deltas_SABR[[1]] <- delta_SABR
stock_held_BS <- rep(0,length(stock_px))
stock_held_SABR <- rep(0, length(stock_px))
stock_held_mkt <- rep(0, length(stock_px))
stock_held_BS[[1]] <- -delta_bs
stock_held_mkt[[1]] <- -delta_mkt
stock_held_SABR[[1]] <- -delta_SABR
days_left <- 55
for (i in 2:length(stock_px)){
days_skipped <- as.numeric(as.Date(stock[i,1], "%m/%d/%Y") - as.Date(stock[i-1,1], "%m/%d/%Y"))
days_left <- days_left - days_skipped
if (as.Date(stock[i,1], "%m/%d/%Y") > (as.Date("06/14/2018","%m/%d/%Y"))){
r <- 0.02
} else {
r <- 0.0175
}
new_vol <- c(hist_px[i:length(hist_px)], head(stock_px,i-1))
new_deltaBS <- deltaBS(stock_px[[i]], 100, r, BS_IV, days_left/252)
new_deltaSABR <- deltaSABR(stock_px[[i]], 100, r, days_left/252, alpha, beta, rho, nu)
new_deltaMkt <- delta_atm[[i]]
delta_bs <- new_deltaBS + stock_held_BS[[i-1]]
delta_SABR <- new_deltaSABR + stock_held_SABR[[i-1]]
delta_mkt <- new_deltaMkt + stock_held_mkt[[i-1]]
port_bs <- port_bs - delta_bs * stock_px[[i]]
port_SABR <- port_SABR - delta_SABR * stock_px[[i]]
port_mkt <- port_mkt - delta_mkt * stock_px[[i]]
daily_pnl_bs[[i]] <- -port_bs
daily_pnl_SABR[[i]] <- -port_SABR
daily_pnl_mkt[[i]] <- -port_mkt
deltas_bs[[i]] <- new_deltaBS
deltas_SABR[[i]] <- new_deltaSABR
stock_held_BS[[i]] <- -delta_bs + stock_held_BS[[i-1]]
stock_held_SABR[[i]] <- -delta_SABR + stock_held_SABR[[i-1]]
stock_held_mkt[[i]] <- -delta_mkt + stock_held_mkt[[i-1]]
}
print(deltas_SABR)
print(deltas_bs)
print(delta_atm)
plot(1:length(stock_px),daily_pnl_mkt,col="red", "l", ylab="PnL", xlab="Time", ylim=c(30,70))
lines(1:length(stock_px), daily_pnl_bs, col="green", "l")
lines(1:length(stock_px), daily_pnl_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), delta_atm, col="red", "l",ylab="Delta", xlab="Time")
lines(1:length(stock_px), deltas_bs, col="green", "l")
lines(1:length(stock_px), deltas_SABR, col="blue", "l")
legend("topright",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
plot(1:length(stock_px), stock_held_mkt, col="red", "l",ylab="Stock Held", xlab="Time")
lines(1:length(stock_px), stock_held_BS, col="green", "l")
lines(1:length(stock_px), stock_held_SABR, col="blue", "l")
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
legend("topleft",
c("Market","BlackScholes", "SABR"),
fill=c("red","green", "blue"))
knitr::opts_chunk$set(echo = TRUE)
may = read.delim("GOOG04062013.dat",header=FALSE,sep=",")
sep = read.delim("GOOG09202013.dat",header=FALSE,sep=",")
jan = read.delim("GOOG01172014.dat",header=FALSE,sep=",")
option_data = rbind(rbind(may, sep), jan)
mkt_px = option_data[,5]
num_data = length(mkt_px)
IV_SABR <- function(f, K, t, alpha, beta, rho, nu){
first = alpha/((f*K)^((1-beta)/2) *(1 + (((1-beta)^2)/24) *(log(f/K))^2 + ((1-beta^4)/1920)*log(f/K)^4))
z = (nu/alpha) * ((f*K)^((1-beta)/2)) * log(f/K)
chi_z = log((sqrt(1-2*rho*z+z^2) + z - rho)/(1-rho))
last = 1 + (((1-beta)^2/24) * alpha^2/((f*K)^(1-beta)) + (1/4) * ((rho*beta*nu*alpha)/((f*K)^((1-beta)/2))) + ((2-3*rho^2)/24)*nu^2)*t
return (first * (z/chi_z) * last)
}
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
SABR_MC_Call <- function(S_0, K, r, alpha_0, beta, rho, nu, T, M, N){
payoff <- 0
for(i in 1:M){
S <- S_0
alpha <- alpha_0
for(n in 1:N){
W1 <- rnorm(1)
W2 <- rnorm(1)
S <- S + r*S*(T/N) + alpha*S^beta*sqrt(T/N)*W1*(exp((-r*(T-n*(T/N)))))^(1-beta)
alpha <- alpha + nu*alpha*(rho * W1 + sqrt(1-rho^2)*W2)*sqrt(T/N)
}
if (S>K){
payoff <- payoff + S-K
}
}
return ((payoff/M) * (1+r*(T/N))^-N)
}
remove(list=ls())
may = read.delim("GOOG04062013.dat",header=FALSE,sep=",")
sep = read.delim("GOOG09202013.dat",header=FALSE,sep=",")
jan = read.delim("GOOG01172014.dat",header=FALSE,sep=",")
option_data = rbind(rbind(may, sep), jan)
mkt_px = option_data[,5]
num_data = length(mkt_px)
IV_SABR <- function(f, K, t, alpha, beta, rho, nu){
first = alpha/((f*K)^((1-beta)/2) *(1 + (((1-beta)^2)/24) *(log(f/K))^2 + ((1-beta^4)/1920)*log(f/K)^4))
z = (nu/alpha) * ((f*K)^((1-beta)/2)) * log(f/K)
chi_z = log((sqrt(1-2*rho*z+z^2) + z - rho)/(1-rho))
last = 1 + (((1-beta)^2/24) * alpha^2/((f*K)^(1-beta)) + (1/4) * ((rho*beta*nu*alpha)/((f*K)^((1-beta)/2))) + ((2-3*rho^2)/24)*nu^2)*t
return (first * (z/chi_z) * last)
}
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
SABR_MC_Call <- function(S_0, K, r, alpha_0, beta, rho, nu, T, M, N){
payoff <- 0
for(i in 1:M){
S <- S_0
alpha <- alpha_0
for(n in 1:N){
W1 <- rnorm(1)
W2 <- rnorm(1)
S <- S + r*S*(T/N) + alpha*S^beta*sqrt(T/N)*W1*(exp((-r*(T-n*(T/N)))))^(1-beta)
alpha <- alpha + nu*alpha*(rho * W1 + sqrt(1-rho^2)*W2)*sqrt(T/N)
}
if (S>K){
payoff <- payoff + S-K
}
}
return ((payoff/M) * (1+r*(T/N))^-N)
}
MSE <- function(vec1, vec2){
ms <- (vec1-vec2)^2
return ((sum(ms))^0.5)/length(vec1)
}
GOOGL_Opt_SABR <- function(param_vectors){
alpha <- param_vectors[[1]]
rho <- param_vectors[[2]]
nu <- param_vectors[[3]]
sv_est = rep(0, num_data)
for (i in 1:num_data){
r = option_data[i,1]
tau = option_data[i,2]
S = option_data[i,3]
K = option_data[i,4]
sv_est[[i]] = BS_V0(S, K, r, IV_SABR(S * exp(r*tau), K, tau, alpha, 1, rho, nu), tau)
}
return (MSE(sv_est, mkt_px))
}
neighbor <- function(param_vectors){
alpha <- param_vectors[[1]]
rho <- param_vectors[[2]]
nu <- param_vectors[[3]]
sdA <- 0.01
sdR <- 0.1
sdN <- 0.1
newA <- rnorm(1, alpha, sdA)
newR <- rnorm(1, rho, sdR)
newN <- rnorm (1, nu, sdN)
while (newA<0 || newA>1 || newR< -1 || newR>1 || newN<0 || newN>1){
sdA <- sdA/2
sdR <- sdR/2
sdN <- sdN/2
newA <- rnorm(1, alpha, sdA)
newR <- rnorm(1, rho, sdR)
newN <- rnorm (1, nu, sdN)
}
return (c(newA, newR, newN))
}
acceptance_probability <- function(old_cost, new_cost, T){
return (exp((old_cost-new_cost)/T))
}
simulated_annealing_SABR <- function(param_vectors){
alpha <- param_vectors[[1]]
rho <- param_vectors[[2]]
nu <- param_vectors[[3]]
sol <- param_vectors
old_cost <- GOOGL_Opt_SABR(c(alpha, rho, nu))
T <- 1.0
T_min <- 1e-4
alpha <- 0.9
while (T > T_min){
for (i in 1: 100){
new_sol <- neighbor(sol)
#print(new_sol)
new_cost <- GOOGL_Opt_SABR(new_sol)
ap = acceptance_probability(old_cost, new_cost, T)
if (ap > runif(1, 0, 1)){
sol <- new_sol
old_cost <- new_cost
}
}
T <- T * alpha
}
return (c(sol, old_cost))
}
alphas <- seq(0,1,0.1)
rhos <- seq(-1,1,0.1)
errors <- matrix(0, nrow=length(alphas), ncol=length(rhos))
for (a in 1:length(alphas)){
for (r in 1:length(rhos)){
errors[a,r] <- GOOGL_Opt_SABR(c(alphas[[a]], rhos[[r]], 0.6500922))
}
}
plot_ly() %>% add_surface(x=rhos, y=alphas, z=errors)
library("NMOF")
library("plotly")
library(ggplot2)
library("plotly")
alphas <- seq(0,1,0.1)
rhos <- seq(-1,1,0.1)
errors <- matrix(0, nrow=length(alphas), ncol=length(rhos))
for (a in 1:length(alphas)){
for (r in 1:length(rhos)){
errors[a,r] <- GOOGL_Opt_SABR(c(alphas[[a]], rhos[[r]], 0.6500922))
}
}
plot_ly() %>% add_surface(x=rhos, y=alphas, z=errors)
