}
Newton_Rhapson_Call <- function(S_0,C_0,K,r,T){
curr_sigma <-100;
diff <- 10000
curr_price <- Option_Price(S_0, K, r, curr_sigma, T)
while (abs(curr_price - C_0)>0.0001) {
curr_sigma <- curr_sigma + ((C_0 - Option_Price(S_0, K, r, curr_sigma, T))/ Vega(S_0, K, r, curr_sigma, T))
curr_price <- Option_Price(S_0, K, r, curr_sigma, T)
}
return(curr_sigma)
}
IV <- Newton_Rhapson_Call(S_0, C_0, 195, 0.0175, 1)
IV
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
sigma <- sd(Y)
sigma*sqrt(252)
beta_0 <- mean(Y)
sigma <- sqrt((mean(df_stock_cp) - beta_0)*2)
Y_hat = rep(0, length(df_stock_cp)-1)
for (i in 2:length(df_stock_cp)-1){
Y_hat[[i]] <- beta_0+sigma*sqrt(1)*rnorm(1);
}
vol<-sd(Y - Y_hat)
vol
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp))){
res = res + Y[[i]]*lambda^t
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp))){
res = res + Y[[i]]*lambda^i
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[[i]]*lambda^i
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp)-2)){
res = res + Y[[i]]*lambda^i
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp)-)){
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
res = 0;
for (i in (1:length(df_stock_cp))){
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp))){
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)1)){
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
i
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
print(i)
res = res + Y[i] * lambda^i
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[i] * lambda^(i+1)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
print(i+1)
res = res + Y[i] * lambda^(i+1)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[i+1] * lambda^(i)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (1:length(df_stock_cp)-1)){
res = res + Y[[i+1]] * lambda^(i)
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i+1]] * lambda^(i)
}
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
print(Y[[i]])
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
res
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.15
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.93
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.5
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]]^2 * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.75
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.8
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]] * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
0.97 ^ 80
0.97 ^200
0.97 ^ 500
0.97 ^ 250
0.97 ^ 400
0.97 ^ 300
0.97 ^ 350
df_stock_cp <- df_stock[complete.cases(df_stock[,3]),3]
Y <- rep(0,length(df_stock_cp)-1)
for (i in 2 :length(df_stock_cp)-1){
if (i < length(df_stock_cp)){
Y[[i]] = log(df_stock_cp[[i]]/df_stock_cp[[i+1]])
}
}
lambda = 0.97
Y
res = 0;
for (i in (2:length(df_stock_cp)-1)){
res = res + Y[[i]]^2 * lambda^(i)
}
res = res * (1-lambda)
sigma = sqrt(res)
sigma
