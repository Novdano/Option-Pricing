plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
lines(50:69, SV, col = "green")
legend("topleft",
c("MonteCarlo","BlackScholes", "SV"),
fill=c("blue","red", "green"))
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2,1, 0.02^2, 0.02 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2,1, 0.02^2, 0.015 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 1, 0.02^2, 0.2 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 1, 0.02^2, 0.5 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 1, 0.02^2, 0.07 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 1, 0.02^2, 0.017 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 1, 0.02^2, 0.005 ,-0.0123, T, M, N)
}
print(MC)
print(BS)
print(SV)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
lines(50:69, SV, col = "green")
legend("topleft",
c("MonteCarlo","BlackScholes", "SV"),
fill=c("blue","red", "green"))
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 5, 0.02^2, 0.5 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 5, 0.02^2, 0.2 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 5, 0.02^2, 0.1 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 5, 0.02^2, 0.05 ,-0.0123, T, M, N)
}
MC <- rep(0,20)
BS <- rep(0,20)
SV <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_BSV0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
SV[[i]] <- MC_SV0(init_price, K+i, r, sigma^2, 5, 0.02^2, 0.02 ,-0.0123, T, M, N)
}
knitr::opts_chunk$set(echo = TRUE)
init_price <- 50
K <- 50
r<- 0.0175
sigma <- 0.2
T <- 5
M <- 1000
N <- 100
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
BS_V0(50, 50, 0.0175, 0.02, 1)
BS_V0(50, 50, 0.0175, 0.02, 1)
BS_V0(50, 50, 0.0175, 0.02, 1)
BS_V0(50,50,0.0175, 0.2, 1)
knitr::opts_chunk$set(echo = TRUE)
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
BS_V0(50,51, 0.0175, 0.02, 1)
init_price <- 50
K <- 50
r<- 0.0175
sigma <- 0.02
T <- 5
M <- 1000
N <- 100
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
print(d1)
print(d2)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
BS_v0(50,51,0.175, 0.02, 1)
BS_V0(50,51,0.175, 0.02, 1)
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * qnorm(d1) - K*qnorm(d2) * exp(-r * T)
print(d1)
print(d2)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + (sigma^2)/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - (sigma^2)/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
print(d1)
print(d2)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
BS_v0(50,51,0.175, 0.02, 1)
BS_V0(50,51,0.175, 0.02, 1)
BS_V0(50,51,0.0175, 0.02, 1)
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
BS_v0(50,51,0.175, 0.02, 1)
BS_V0(50,51,0.175, 0.02, 1)
BS_V0(50,51,0.0175, 0.02, 1)
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(50:69), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(50:69, BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + (sigma^2)/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - (sigma^2)/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
print(K+i)
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
init_price <- 50
K <- 50
r<- 0.0175
sigma <- 0.02
T <- 5
M <- 100
N <- 100
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 50,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 51,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
print(MC_V0(init_price, K+i, r, sigma, T, M, N))
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
print(BS_V0(init_price, K+i, r, sigma, T))
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 51,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
init_price <- 50
K <- 50
r<- 0.0175
sigma <- 0.02
T <- 1
M <- 100
N <- 100
MC <- rep(0,20)
BS <- rep(0,20)
for (i in 1:20){
MC[[i]] <- MC_V0(init_price, K+i, r, sigma, T, M, N)
print(MC_V0(init_price, K+i, r, sigma, T, M, N))
BS[[i]] <- BS_V0(init_price, K+i, r, sigma, T)
print(BS_V0(init_price, K+i, r, sigma, T))
}
print(MC)
print(BS)
plot(c(51:70), MC, main = "plot K = 51,...,70", ylab = "Price", xlab="Strike", type = "l", col = "blue")
lines(c(51:70), BS, col = "red")
legend("topleft",
c("MonteCarlo","BlackScholes"),
fill=c("blue","red"))
knitr::opts_chunk$set(echo = TRUE)
init_price <- 50
K <- 50
r<- 0.0175
sigma <- 0.2
T <- 5
M <- 1000
N <- 100
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
try <- BS_V0(50,50,0.0175,0.02,1)
BS_V0 <- function(S_0, K, r, sigma, T){
d1 <- (log(S_0/K) + (r + sigma^2/2)*T)/(sigma * sqrt(T))
d2 <- (log(S_0/K) + (r - sigma^2/2)*T)/(sigma * sqrt(T))
res <- S_0 * pnorm(d1) - K*pnorm(d2) * exp(-r * T)
return(res)
}
MC_V0 <- function(S_0, K, r, sigma, T, N, M){
payoff <- rep(0,M)
for (i in 1:M){
s <- S_0
for (n in 1:N){
s <- s + r*s*(T/N) + sigma * s * rnorm(1) * sqrt(T/N)
}
if (s>K){
payoff[[i]] <- s-K
} else {
payoff[[i]] <- 0
}
}
res <- (1 + r * (T/N))^-N * mean(payoff)
}
try <- BS_V0(50,50,0.0175,0.02,1)
print(try)
